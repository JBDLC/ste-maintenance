#!/usr/bin/env python3
"""
Script de migration manuel PostgreSQL pour ajouter la colonne 'donnees_fournisseur'
Utilise SQLAlchemy avec la syntaxe text() pour compatibilit√© SQLAlchemy 2.0+
"""

import os
import sys
from sqlalchemy import create_engine, text
from sqlalchemy.orm import sessionmaker

def migrate():
    """Ajoute la colonne donnees_fournisseur √† la table Piece sur PostgreSQL"""
    
    # R√©cup√©rer les variables d'environnement Render
    database_url = os.getenv('DATABASE_URL')
    
    if not database_url:
        print("‚ùå Variable d'environnement DATABASE_URL non trouv√©e")
        print("üí° Assurez-vous d'√™tre sur Render ou de d√©finir DATABASE_URL")
        return False
    
    try:
        # Connexion √† la base PostgreSQL via SQLAlchemy
        engine = create_engine(database_url)
        Session = sessionmaker(bind=engine)
        session = Session()
        
        print(f"üîó Connexion √©tablie √† PostgreSQL")
        
        # V√©rifier si la colonne existe d√©j√†
        print("üîç V√©rification de l'existence de la colonne...")
        result = session.execute(text("""
            SELECT column_name 
            FROM information_schema.columns 
            WHERE table_name = 'piece' AND column_name = 'donnees_fournisseur'
        """)).fetchone()
        
        if result:
            print("‚úÖ La colonne 'donnees_fournisseur' existe d√©j√†")
            return True
        
        # Ajouter la colonne donnees_fournisseur
        print("üîß Ajout de la colonne 'donnees_fournisseur'...")
        session.execute(text("""
            ALTER TABLE piece 
            ADD COLUMN donnees_fournisseur TEXT
        """))
        
        # Valider les changements
        session.commit()
        print("‚úÖ Changements valid√©s")
        
        # V√©rifier que la colonne a √©t√© ajout√©e
        result = session.execute(text("""
            SELECT column_name, data_type 
            FROM information_schema.columns 
            WHERE table_name = 'piece' AND column_name = 'donnees_fournisseur'
        """)).fetchone()
        
        if result:
            print(f"‚úÖ Colonne ajout√©e avec succ√®s: {result[0]} ({result[1]})")
            return True
        else:
            print("‚ùå Erreur: La colonne n'a pas √©t√© ajout√©e")
            return False
            
    except Exception as e:
        print(f"‚ùå Erreur lors de la migration: {e}")
        import traceback
        traceback.print_exc()
        return False
    finally:
        if 'session' in locals():
            session.close()
        if 'engine' in locals():
            engine.dispose()

if __name__ == "__main__":
    print("üöÄ Migration PostgreSQL manuelle: Ajout de la colonne 'donnees_fournisseur'")
    print("=" * 70)
    
    success = migrate()
    
    if success:
        print("\n‚úÖ Migration termin√©e avec succ√®s!")
        print("üéâ Vous pouvez maintenant red√©marrer l'application")
    else:
        print("\n‚ùå Migration √©chou√©e!")
        print("üîß V√©rifiez les logs et r√©essayez")
        sys.exit(1) 